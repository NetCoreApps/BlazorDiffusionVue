@using BlazorDiffusion.Components.Identity
@inherits AppAuthComponentBase
@inject NavigationManager NavigationManager

<header id="header" class="absolute inset-x-0 top-0 z-50">
    <LogoutForm id="logout-form" />
    <nav class="flex items-center justify-between px-4" aria-label="Global">
        <div class="flex sm:flex-1">
            <a href="/" class="flex items-center flex-shrink-0 text-2xl whitespace-nowrap overflow-x-hidden flex items-center active">
                <img class="h-8 w-8 my-3" src="/img/blazor.svg" alt="My App">
                <div class="ml-2 text-black dark:text-white">Diffusion</div>
            </a>
        </div>
        <div class="flex sm:hidden">
            <button v-on:click="showMobileNav=true" type="button" class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-400">
                <span class="sr-only">Open main menu</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                </svg>
            </button>
        </div>
        <div class="hidden sm:flex sm:gap-x-6 lg:gap-x-12">
            @foreach (var link in links)
            {
                if (link.Item1 == HttpContext!.Request.Path.ToString().TrimStart('/'))
                {
                    <NavLink href="@link.Item1" class="text-lg font-semibold leading-6 text-white border-b-2">@link.Item2</NavLink>
                }
                else
                {
                    <NavLink href="@link.Item1" class="text-lg font-semibold leading-6 text-white">@link.Item2</NavLink>
                }
            }
        </div>
        <div class="hidden sm:flex sm:flex-1 sm:justify-end">
            <SignInLink />
        </div>
    </nav>
    <div v-if="showMobileNav" class="sm:hidden" role="dialog" aria-modal="true">
        <div class="fixed inset-0 z-50"></div>
        <div class="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-gray-900 px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-white/10">
            <div class="flex items-center justify-between">
                <a href="#" class="-m-1.5 p-1.5">
                    <span class="sr-only">Your Company</span>
                    <svg class="h-8 w-auto" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                        <path fill="#41b883" d="M24.4 3.925H30l-14 24.15L2 3.925h10.71l3.29 5.6l3.22-5.6Z" />
                        <path fill="#41b883" d="m2 3.925l14 24.15l14-24.15h-5.6L16 18.415L7.53 3.925Z" />
                        <path fill="#35495e" d="M7.53 3.925L16 18.485l8.4-14.56h-5.18L16 9.525l-3.29-5.6Z" />
                    </svg>
                </a>
                <button v-on:click="showMobileNav=false" type="button" class="-m-2.5 rounded-md p-2.5 text-gray-400">
                    <span class="sr-only">Close menu</span>
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <div class="mt-6 flow-root">
                <div class="-my-6 divide-y divide-gray-500/25">
                    <div class="space-y-2 py-6">
                        @foreach (var link in links)
                        {
                            <a href="@link.Item1" class="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-white hover:bg-gray-800">@link.Item2</a>
                        }
                    </div>
                    <div class="py-6">
                        <SignInLink MenuClass="left-4" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

@code {
    [CascadingParameter] public HttpContext? HttpContext { get; set; }

    (string,string)[] links = new[]
    {
        ("", "Search"),
        ("create", "Create"),
        ("favorites", "Favorites"),
    };

}
